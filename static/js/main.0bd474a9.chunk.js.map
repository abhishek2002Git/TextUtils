{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","home","aboutText","onClick","funcRedBtn","htmlFor","toggleMode","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","substr","split","length","Alert","alert","role","msg","defaultProps","App","setMode","setAlert","message","setTimeout","txtArea","document","getElementById","buttons","getElementsByClassName","body","backgroundColor","elem","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0bd474a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">\r\n                {props.home}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch mx-5 text-${props.mode==='light'?'dark':'light'}`}> \r\n                {/* // to change the color of text */}\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"blueBtn\"\r\n              onClick={props.funcRedBtn}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Red Mode\r\n            </label>\r\n          </div>\r\n          <div className={`form-check form-switch mx-5 text-${props.mode==='light'?'dark':'light'}`}> \r\n                {/* // to change the color of text */}\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n};\r\n// defining the type of props\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"Set About Text here\",\r\n  home: \"Home\",\r\n};\r\n// these are default values of props which will be display if they are not defined\r\n","import React, {useState} from \"react\";\r\n//'useState' is used to create state variables\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n    }\r\n    const handleClrClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n    const handleTitClick = ()=>{\r\n        let newText = text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleOnChange = (event)=>{  // this function let you to change the value of text area\r\n        setText(event.target.value);\r\n    }\r\n    \r\n\r\n  const [text, setText] = useState('Enter text here');\r\n    // 'text' is a static variable whose default value is 'Enter text here' , 'setText' is a function which lets you to change the value of 'text'  \r\n\r\n\r\n  return (\r\n    <>  \r\n    <div style={{color: props.mode==='dark'?'white':'black'}} >\r\n       <h1>{props.heading}</h1> \r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value = {text}\r\n          onChange = {handleOnChange} // 'handleOnChange()' will be called when value of textarea will be changed\r\n          id=\"txtArea\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary buttons\" onClick={handleUpClick}>ConvertToUppercase</button>\r\n      <button className=\"btn btn-primary mx-2 buttons\" onClick={handleLowClick}>ConvertToLowercase</button>\r\n      <button className=\"btn btn-primary mx-2 buttons\" onClick={handleTitClick}>Title Case</button>\r\n      <button className=\"btn btn-primary mx-2 buttons\" onClick={handleClrClick}>Clear</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes will required to read</p>\r\n        <h5>{text}</h5>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n      props.alert && \r\n    <div>\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >  <strong>{props.alert.type}</strong> {props.alert.msg}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n// import About from \"./components/About\";\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n     setAlert({\n       msg: message,\n       type: type\n     })\n     setTimeout(() => {\n       setAlert(null);    \n     }, 1500);\n  }\n\n\n  \n  /***************Function for Red button**************************************************/ \n  const funcRedBtn = () =>{\n    let txtArea = document.getElementById('txtArea');\n    let buttons = document.getElementsByClassName('buttons');\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'rgb(41, 5, 5)'\n      txtArea.style.backgroundColor = 'rgb(41, 5, 5)';\n      txtArea.style.color = 'white';\n      for (const elem of buttons) {\n        elem.style.backgroundColor = 'rgb(41, 5, 5)';\n        elem.style.border = '2px solid black';\n      }\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      txtArea.style.backgroundColor = 'white';\n      txtArea.style.color = 'black';\n      for (const elem of buttons) {\n        elem.style.backgroundColor = 'blue';\n        elem.style.border = '2px solid blue';\n      }\n    }\n  }\n  /*************  Function for Dark Button************************************************/ \n  const funcDarkBtn = () =>{\n    let txtArea = document.getElementById('txtArea');\n    let buttons = document.getElementsByClassName('buttons');\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      txtArea.style.backgroundColor = 'black';\n      txtArea.style.color = 'white';\n      for (const elem of buttons) {\n        elem.style.backgroundColor = 'black';\n        elem.style.border = '2px solid white';\n      }\n      showAlert(\"Dark Mode is enabled\", \"success\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      txtArea.style.backgroundColor = 'white';\n      txtArea.style.color = 'black';\n      for (const elem of buttons) {\n        elem.style.backgroundColor = 'blue';\n        elem.style.border = '2px solid blue';\n      }\n      showAlert(\"Dark Mode is Disabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils2\" aboutText=\"About Us\" mode={mode} toggleMode={funcDarkBtn} funcRedBtn={funcRedBtn}/>\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter the Text To Analyze Below:\" mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n// Here, 'Navbar' is a component and 'title', 'aboutText' are props of that component.\n// 'home' prop is not defined here but still it takes its value from defaultProps in Navbar.js","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}